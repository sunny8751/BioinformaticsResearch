summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
graphics.off()
#
#7/27/2015
#weights_GCGC_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf_GCGC.csv", header = T)
#create the graph
jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGC E2F1 Feats (x) vs. E2F4 Feats (y)",
xlab = "E2F1 1&3mer Feats", ylab = "E2F4 1&3mer Feats")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
graphics.off()
#
#7/27/2015
#weights_GCGC_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf_GCGC.csv", header = T)
#create the graph
# jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGC E2F1 Feats (x) vs. E2F4 Feats (y)",
xlab = "E2F1 1&3mer Feats", ylab = "E2F4 1&3mer Feats")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
# graphics.off()
#
#7/27/2015
#weights_GCGC_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf_GCGC.csv", header = T)
#create the graph
# jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGC E2F1 Feats (x) vs. E2F4 Feats (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
# graphics.off()
#
#7/27/2015
#weights_GCGC_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf_GCGC.csv", header = T)
#create the graph
jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGC E2F1 Feats (x) vs. E2F4 Feats (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
graphics.off()
#
#7/27/2015
#weights_GCGC_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf_GCGC.csv", header = T)
#create the graph
# jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGC E2F1 Feats (x) vs. E2F4 Feats (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
# graphics.off()
#
#7/27/2015
#weights_GCGC_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf_GCGC.csv", header = T)
#create the graph
# jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGG E2F1 Feats (x) vs. E2F4 Feats (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
# graphics.off()
#
#7/27/2015
#weights_GCGC_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf_GCGC.csv", header = T)
#create the graph
jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGG E2F1 Feats (x) vs. E2F4 Feats (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
graphics.off()
#
#7/27/2015
#weights_GCGC_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf_GCGC.csv", header = T)
#create the graph
jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGG E2F1 Feats (x) vs. E2F4 Feats (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
graphics.off()
#
#x is e2f1, y is e2f4
#7/27/2015
#weights_GCGC_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set core
core = "GCGG"
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/
Actual/Analysis/weights_"+core+"_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf_"+core+".csv", header = T)
#create the graph
jpeg("graph_13mer_featWeights_"+core+".jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core "+core+" 1&3mer Feats E2F1 (x) vs. E2F4 (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
graphics.off()
#
#7/27/2015
#weights_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/
Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf.csv", header = T)
#create the graph
# jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGC 1&3mer Feats E2F1 (x) vs. E2F4 (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
# graphics.off()
#
#7/27/2015
#weights_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf.csv", header = T)
#create the graph
# jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGC 1&3mer Feats E2F1 (x) vs. E2F4 (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
# graphics.off()
#
jpeg("graph_weights_GCGC.jpg")
#7/27/2015
#weights_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf.csv", header = T)
#create the graph
jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGC 1&3mer Feats E2F1 (x) vs. E2F4 (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
graphics.off()
#
#7/27/2015
#weights_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGC_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf.csv", header = T)
#create the graph
jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGC 1&3mer Feats E2F1 (x) vs. E2F4 (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
graphics.off()
#
#7/27/2015
#weights_E2F1vsE2F4
#Sunwoo Yim
#graph the 3mer feature weights of E2F1 and E2F4's GCGC core shared sequences on xy plot
#
#clean everything
rm(list=ls())
#set the working database
setwd("/Users/Sunwoo/Documents/NCSSM/Research in Computational Science/Research/Data/Actual/Analysis/weights_GCGG_E2F1vsE2F4")
#
#read in the data and attach it (make available for analysis)
tf <- read.csv(file = "tf.csv", header = T)
#create the graph
jpeg("graph_weights_GCGC.jpg")
plot(tf$e2f4averages~tf$e2f1averages, main="Core GCGG 1&3mer Feats E2F1 (x) vs. E2F4 (y)",
xlab = "E2F1 1&3mer Feature Weights", ylab = "E2F4 1&3mer Feature Weights")
ps.fit<-lm(tf$e2f4averages~tf$e2f1averages)
#print the best fit line
#abline(ps.fit)
summary(ps.fit)
#print the y=x line
abline(0, 1)
#print error bars
#x is e2f1, y is e2f4
segments(tf$e2f1averages, tf$e2f4averages-tf$e2f4errors,tf$e2f1averages, tf$e2f4averages+tf$e2f4errors)
segments(tf$e2f1averages-tf$e2f1errors, tf$e2f4averages,tf$e2f1averages+tf$e2f1errors, tf$e2f4averages)
#
#identify values
# identify(tf$e2f1averages, tf$e2f4averages)
# epsilon = 0.01
# segments(e2f1$averages-epsilon,e2f4$averages-e2f4$errors,e2f1$averages+epsilon,e2f4$averages-e2f4$errors)
# segments(e2f1$averages-epsilon,e2f4$averages+e2f4$errors,e2f1$averages+epsilon,e2f4$averages+e2f4$errors)
#End graph
graphics.off()
#
